from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from color_analyzer.models import TypKolorystyczny, Analiza, ProfilUzytkownika
from django.utils import timezone
import random
from faker import Faker

fake = Faker('pl_PL')

class Command(BaseCommand):
    help = '≈Åaduje fikcyjne dane do bazy'

    def handle(self, *args, **kwargs):
        # Za≈Çaduj 12 typ√≥w kolorystycznych je≈õli ich nie ma
        print("‚úÖ Sprawdzanie typ√≥w kolorystycznych...")
        SEZONY = [
            ('spring_light', 'Jasna Wiosna'),
            ('spring_warm', 'Ciep≈Ça Wiosna'),
            ('spring_clear', 'Czysta Wiosna'),
            ('summer_light', 'Jasne Lato'),
            ('summer_cool', 'Ch≈Çodne Lato'),
            ('summer_soft', 'Miƒôkkie Lato'),
            ('autumn_soft', 'Miƒôkka Jesie≈Ñ'),
            ('autumn_warm', 'Ciep≈Ça Jesie≈Ñ'),
            ('autumn_deep', 'G≈Çƒôboka Jesie≈Ñ'),
            ('winter_cool', 'Ch≈Çodna Zima'),
            ('winter_clear', 'Czysta Zima'),
            ('winter_deep', 'G≈Çƒôboka Zima'),
        ]

        for kod, nazwa in SEZONY:
            TypKolorystyczny.objects.get_or_create(
                nazwa=kod,
                defaults={
                    'opis': f"Opis typu {nazwa}",
                    'dominujaca_tonacja': random.choice(['ciep≈Ça', 'ch≈Çodna']),
                    'poziom_kontrastu': random.choice(['niski', '≈õredni', 'wysoki']),
                    'nasycenie': random.choice(['niskie', '≈õrednie', 'wysokie']),
                    'kolory_podstawowe': ['#ffccaa', '#336699'],
                    'kolory_unikane': ['#000000', '#ffffff'],
                }
            )
        print("‚úÖ Typy kolorystyczne gotowe.")

        # Tworzenie u≈ºytkownik√≥w
        print("üë§ Tworzenie u≈ºytkownik√≥w i profili...")
        for i in range(15):
            username = f"user{i}"
            if not User.objects.filter(username=username).exists():
                user = User.objects.create_user(username=username, password='test1234')
                ProfilUzytkownika.objects.create(
                    uzytkownik=user,
                    wiek=random.randint(18, 65),
                    plec=random.choice(['K', 'M']),
                    ulubiony_typ=TypKolorystyczny.objects.order_by('?').first()
                )
        print("‚úÖ U≈ºytkownicy stworzeni.")

        # Tworzenie analiz
        print("üß™ Tworzenie analiz...")
        uzytkownicy = User.objects.all()
        typy = list(TypKolorystyczny.objects.all())

        for _ in range(60):
            user = random.choice(uzytkownicy)
            typ = random.choice(typy)
            Analiza.objects.create(
                uzytkownik=user,
                status='completed',
                data_utworzenia=fake.date_time_between(start_date='-1y', end_date='now', tzinfo=timezone.get_current_timezone()),
                typ_kolorystyczny=typ,
                tonacja_skory=typ.dominujaca_tonacja,
                kontrast_poziom=random.randint(1, 10),
                nasycenie_poziom=random.randint(1, 10),
                kolory_skory=["#fceee4", "#fcd2b0"],
                kolory_oczu=["#123456", "#abcdef"],
                kolory_wlosow=["#111111", "#333333"],
                pewnosc_wyniku=round(random.uniform(0.6, 0.99), 2),
                notatki=fake.sentence()
            )
        print("‚úÖ Analizy dodane.")
